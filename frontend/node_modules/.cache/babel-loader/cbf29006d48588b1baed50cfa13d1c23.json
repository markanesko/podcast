{"remainingRequest":"/home/markanesko/projects/github.com/podcast/frontend/node_modules/babel-loader/lib/index.js!/home/markanesko/projects/github.com/podcast/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/markanesko/projects/github.com/podcast/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/markanesko/projects/github.com/podcast/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/markanesko/projects/github.com/podcast/frontend/src/App.vue","mtime":1603463219860},{"path":"/home/markanesko/projects/github.com/podcast/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanesko/projects/github.com/podcast/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/markanesko/projects/github.com/podcast/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanesko/projects/github.com/podcast/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHBhcnNlVVJMIH0gZnJvbSAncnNzLXBhcnNlcic7CmltcG9ydCBmZWVkc2xpc3QgZnJvbSAnQC9jb21wb25lbnRzL2ZlZWRzbGlzdC52dWUnOwppbXBvcnQgZmVlZHZpZXcgZnJvbSAnQC9jb21wb25lbnRzL2ZlZWR2aWV3LnZ1ZSc7CmltcG9ydCBwbGF5ZXIgZnJvbSAnQC9jb21wb25lbnRzL3BsYXllci52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgZmVlZHNsaXN0OiBmZWVkc2xpc3QsCiAgICBmZWVkdmlldzogZmVlZHZpZXcsCiAgICBwbGF5ZXI6IHBsYXllcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZlZWRzOiB7fSwKICAgICAgc2VsZWN0ZWRGZWVkOiB7fSwKICAgICAgc2VsZWN0ZWRUcmFjazogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZWVkU2VsZWN0OiBmdW5jdGlvbiBmZWVkU2VsZWN0KG5hbWUpIHsKICAgICAgaWYgKCF0aGlzLmZlZWRzW25hbWVdKSB0aGlzLnNlbGVjdGVkRmVlZCA9IHt9OwogICAgICB0aGlzLnNlbGVjdGVkRmVlZCA9IHRoaXMuZmVlZHNbbmFtZV07CiAgICB9LAogICAgdHJhY2tTZWxlY3RlZDogZnVuY3Rpb24gdHJhY2tTZWxlY3RlZCh1cmwpIHsKICAgICAgaWYgKCF1cmwpIHRoaXMuc2VsZWN0ZWRUcmFjayA9ICIiOwogICAgICB0aGlzLnNlbGVjdGVkVHJhY2sgPSB1cmw7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBmZXRjaCgiL3N0YXRpYy9mZWVkcy5qc29uIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGlmIChyZXMubGVuZ3RoKSB7CiAgICAgICAgcmVzLmZvckVhY2goZnVuY3Rpb24gKGZlZWQpIHsKICAgICAgICAgIHBhcnNlVVJMKGZlZWQsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHsKICAgICAgICAgICAgaWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpOwoKICAgICAgICAgICAgX3RoaXMuJHNldChfdGhpcy5mZWVkcywgZGF0YS5mZWVkLnRpdGxlLCBkYXRhLmZlZWQpOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgYWxlcnQoIk5vIHBvZGNhc3QgdXJscyBmb3VuZCIpOwogICAgICB9CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,QAAA,QAAA,YAAA;AAEA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA,SAAA;AAAA,IAAA,QAAA,EAAA,QAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA;AAHA,KAAA;AAKA,GATA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,UAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,EAAA,KAAA,YAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AACA,KAJA;AAMA,IAAA,aANA,yBAMA,GANA,EAMA;AACA,UAAA,CAAA,GAAA,EAAA,KAAA,aAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,GAAA;AACA;AATA,GAXA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AACA,IAAA,KAAA,CAAA,oBAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,aAAA,GAAA,CAAA,IAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,MAAA,EAAA;AACA,QAAA,GAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,EAAA,UAAA,GAAA,EAAA,IAAA,EAAA;AACA,gBAAA,GAAA,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA;;AACA,YAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA;AACA,WAHA,CAAA;AAIA,SALA;AAMA,OAPA,MAOA;AACA,QAAA,KAAA,CAAA,uBAAA,CAAA;AACA;AACA,KAbA;AAcA;AAvCA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n\n    <h1> Simple podcast \n      <span class=\"pull-right\">\n        <player :track=\"selectedTrack\"/>\n      </span>\n    </h1>\n\n    <div class=\"row\">\n      <feedslist :feeds=\"feeds\" :selected-feed-title=\"selectedFeed.title\" @on-feed-seleted=\"feedSelected\"/>\n      <feedview :feed=\"selectedFeed\" :selected-track=\"selectedTrack\" @on-track-select=\"trackSelected\"/>\n      \n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { parseURL } from 'rss-parser'\n\nimport feedslist from '@/components/feedslist.vue'\nimport feedview from '@/components/feedview.vue'\nimport player from '@/components/player.vue'\n\nexport default {\n  components: { feedslist, feedview, player },\n\n  data() {\n    return {\n      feeds: {},\n      selectedFeed: {},\n      selectedTrack: \"\",\n    }\n  },\n\n  methods: {\n    feedSelect (name) {\n      if (!this.feeds[name]) this.selectedFeed = {}\n      this.selectedFeed = this.feeds[name]\n    },\n    \n    trackSelected (url) {\n      if (!url) this.selectedTrack = \"\"\n      this.selectedTrack = url\n    },\n\n  },\n\n  mounted() {\n    fetch(\"/static/feeds.json\")\n      .then(res => res.json() )\n      .then(res => {\n        if (res.length) {\n          res.forEach( feed => {\n            parseURL(feed, (err, data) => {\n              if (err) console.error(err)\n              this.$set(this.feeds, data.feed.title, data.feed)\n            })\n          })\n        } else {\n          alert(\"No podcast urls found\")\n        }\n      })\n  }\n  \n}\n</script>"],"sourceRoot":"src"}]}